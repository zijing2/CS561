/*
 * File - sdap.pgc (Need the .pgc extension!) 
 *
 * Desc - This is a simple skeleton program using Embedded SQL to read all
 *        of the rows from the table "sales" and output to the console.
 *        Simple but it contains all of the essential features of ESQL 
 *        discussed in class!
 *
 * Steps to run this program : 
 *  1. In the program (L49), modify [dbname], [username], [password] to
 *     yours ([dbname] is the same as your [username] by default).
 *  2. Preprocessor - $ ecpg -I "C:\Program Files\PostgreSQL\9.4\include" sdap.pgc
 *  3. Compile      - $ gcc -c -I "C:\Program Files\PostgreSQL\9.4\include" sdap.c
 *  4. Link         - $ gcc -L "C:\Program Files\PostgreSQL\9.4\lib" -lecpg -o sdap sdap.o
 *  5. Execute      - $ .\sdap
 */

#include	<stdio.h>

//----------------------------------------------------------------------
// HOST VARIABLES definitions
//----------------------------------------------------------------------
EXEC SQL BEGIN DECLARE SECTION;
struct {
	char	*cust;
	char	*prod;
	short    dd;
	short    mm;
	short	 yy;
	char	*state;
	long	 quant;
}	sale_rec;
EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE sqlca;

//----------------------------------------------------------------------
// FUNCTION PROTOTYPE declaration
//----------------------------------------------------------------------
void	output_record(); //output records to the console
void  maximum_quant(); //compute the maximum sales quantities along with the corresponding customers, dates
void  minimum_quant(); //compute the minimum sales quantities along with the corresponding customers, dates

//----------------------------------------------------------------------
int main(int argc, char* argv[])
//----------------------------------------------------------------------
{
   //----------------------------------------------------------------------
   // DATABASE CONNECTION
   //----------------------------------------------------------------------
   // EXEC SQL CONNECT TO PostgreSQL@localhost:5432 USER PostgreSQL IDENTIFIED BY XYZ;
   EXEC SQL CONNECT TO huangzijing@localhost:5432 USER huangzijing;
   
   if (sqlca.sqlcode != 0) {	// login error
   	printf ("Login error!!!\n");
   	return -1;
   }
   EXEC SQL WHENEVER sqlerror sqlprint;

   //----------------------------------------------------------------------
   // PRINT TITLE
   //----------------------------------------------------------------------   
   printf(" CUST  | PROD    | DAY | MON | YEAR | STATE | QUANT \n");
   printf("-------+---------+-----+-----+------+-------+-------\n");
   
   //----------------------------------------------------------------------
   // READ RECORDS
   //----------------------------------------------------------------------
   EXEC SQL DECLARE mycursor CURSOR FOR SELECT * FROM sales;
   EXEC SQL SET TRANSACTION read only;
   // Open cursor
   EXEC SQL OPEN mycursor;
   // Fetch Data
   EXEC SQL FETCH FROM mycursor INTO :sale_rec; //fetch the first row
   while (sqlca.sqlcode == 0) {
      output_record();
      EXEC SQL FETCH FROM mycursor INTO :sale_rec; //fetch the rest rows
   }
   // Close cursor
   EXEC SQL CLOSE mycursor;

   return 0;
}

//----------------------------------------------------------------------
void	output_record()
//----------------------------------------------------------------------
{
	printf(" %-5s |",sale_rec.cust);   // Customer
	printf(" %-7s |",sale_rec.prod);   // Product
	printf("  %2d |",sale_rec.dd);     // Day
	printf("  %2d |",sale_rec.mm);     // Month
	printf(" %4d |",sale_rec.yy);      // Year
	printf(" %-5s |",sale_rec.state);  // State
	printf(" %5ld \n",sale_rec.quant);  // Quantity
}
